name: Build and Publish Release
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        target-dir: [linux, macos, windows]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build release binary
        run: |
          cargo build --release --target-dir target/${{ matrix.target-dir }}

      - name: Package (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target-dir }}/release
          tar czf rmc-${{ matrix.target-dir }}.tar.gz rmc

      - name: Package (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          cd target/${{ matrix.target-dir }}/release
          Compress-Archive -Path rmc.exe -DestinationPath rmc-${{ matrix.target-dir }}.zip

      - name: Publish on GitHub Releases
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
            target/${{ matrix.target-dir }}/release/*.tar.gz
            target/${{ matrix.target-dir }}/release/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
